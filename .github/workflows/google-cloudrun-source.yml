name: 'Deploy to Cloud Run from Source'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: 'manuelmata-dev' # TODO: update to your Google Cloud project ID
  REGION: 'us-central1' # TODO: update to your region
  SERVICE: 'my-service-from-pipeline' # TODO: update to your service name
  TOKEN: ${{ secrets.GCP_SA_KEY }}
  BRANCH: ${{ github.head_ref || github.ref_name }}
  APP_NAME: plain-language-app
  JOB_NAME: plain-language-job
  GROUNDING_JOB_NAME: plain-language-grounding-job
  REPO_NAME: nodehello-1
  SERVICE_ACCOUNT: ${{ vars.SERVICE_ACCOUNT  }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
  CICD_SERVICE_ACCOUNT: ${{ vars.CICD_SERVICE_ACCOUNT  }}
  BUCKET_NAME: ${{ vars.BUCKET_NAME }}
  FRONTEND_API_URI: ${{ vars.FRONTEND_API_URI }}

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' 
      - name: 'Google Cloud Auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}
      - run: gcloud info
      - run: gcloud config set project ${{ env.PROJECT_ID }}    
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
  # Update Prompt synchronized prompt files in GCS bucket.
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-auth==2.19.1
          pip install --upgrade google-api-python-client
       
          
          
      - name: Run Calling Script
        run: |
          python sync.py
          
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17' # google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          # NOTE: If using a different source folder, update the image name below:
          source: './'

      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |-
          echo ${{ steps.deploy.outputs.url }}
