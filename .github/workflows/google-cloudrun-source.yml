# This workflow will deploy source code on Cloud Run when a commit is pushed to
# the "main" branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Build (cloudbuild.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Source Developer (roles/run.sourceDeveloper)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources.
#
# 3. Change the values in the "env" block to match your values.

name: 'Deploy to Cloud Run from Source'

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: 'manuelmata-dev' # TODO: update to your Google Cloud project ID
  REGION: 'us-central1' # TODO: update to your region
  SERVICE: 'my-service-from-pipeline' # TODO: update to your service name

  BRANCH: ${{ github.head_ref || github.ref_name }}
  APP_NAME: plain-language-app
  JOB_NAME: plain-language-job
  GROUNDING_JOB_NAME: plain-language-grounding-job
  REPO_NAME: nodehello-1
  SERVICE_ACCOUNT: ${{ vars.SERVICE_ACCOUNT  }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
  CICD_SERVICE_ACCOUNT: ${{ vars.CICD_SERVICE_ACCOUNT  }}
  BUCKET_NAME: ${{ vars.BUCKET_NAME }}
  FRONTEND_API_URI: ${{ vars.FRONTEND_API_URI }}

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - name: 'Google Cloud Auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}
      - run: gcloud info
      - run: gcloud config set project ${{ env.PROJECT_ID }}    
       # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

    # Update Prompt synchronized prompt files in GCS bucket.
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.7.1
          poetry add --group dev 'pytest'
          poetry install --with dev
      - name: Run Calling Script
        run: |
          poetry run python sync.py \
          --audience ${{ env.FRONTEND_API_URI }} \
          --target_principal ${{ env.SERVICE_ACCOUNT }} \
          --environment ${{ github.head_ref || github.ref_name }}

      - name: 'Clean Up Python'
        run: |
          rm -rf /opt/hostedtoolcache/Python/*
          rm -rf /home/runner/.cache/pypoetry/*
  
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17' # google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          # NOTE: If using a different source folder, update the image name below:
          source: './'

      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |-
          echo ${{ steps.deploy.outputs.url }}
